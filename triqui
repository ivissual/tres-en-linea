from machine import Pin as pin,ADC,I2C
from utime import sleep_ms
from ssd1306 import SSD1306_I2C
import random
import framebuf

sensorx = ADC(pin(32))   # pines usados el 35,34,33,36, 39 , 32, 
sensory = ADC(pin(33))   # pines usados el 35,34,33,36, 39 , 32, 
Bot贸n = pin (35,pin.IN,pin.PULL_UP)
boton1=pin (5,pin.IN,pin.PULL_UP)

sensorx.atten(ADC.ATTN_11DB)   # para calibrar de 0 a 3.6v
sensorx.width(ADC.WIDTH_12BIT) # establecer resoluci贸n
sensory.atten(ADC.ATTN_11DB)   # para calibrar de 0 a 3.6v
sensory.width(ADC.WIDTH_12BIT) # establecer resoluci贸n
ancho = 128
alto = 64
i2c = I2C(0, scl=pin(22), sda=pin(23))
oled = SSD1306_I2C(ancho, alto, i2c)
# print(i2c.scan())
def boton():
  for i in reversed(boton):
    i.value(1)
    sleep(0.05)
    i.value(0)
    sleep(0.05)

while True:
  x=sensorx.read()
  y=sensory.read()
  oled.line(38,0,38,64,1)
  oled.line(80,0,80,100,1)
  oled.line(0,20,122,20,1)
  oled.line(0,45,122,45,1)

  if (Bot贸n.value()==1):
    print ("O")
    oled.text("O", 55,30,1)

  if x>3600:
    print ("X")
    oled.text("X", 9,30,1)
  elif x<150:
    print ("O")
    oled.text("O", 95,30,1)
  
  if y>3600:
    print ("X ")
    oled.text("X", 55,5,1)
  elif y<150:
    print ("O")
    oled.text("O", 55,52,1)

  if x>3600 and y>3600:
    print ("X")
    oled.text("X", 9,5,1)
  elif x>3600 and y<150:
    print ("O")
    oled.text("O", 9,52,1)

  if y>3600 and x<150:
    print ("O")
    oled.text("O", 95,5,1)
  elif y<150 and x<150:
    print ("X")
    oled.text("X", 95,52,1)
  oled.show()
sleep_ms(200)
